stages:
  - build-back
  - deploy-back
  - deploy-node
  - deploy-daemon
  - android-build
  - android-test
  - android-package

cache:
  paths:
    - .m2/repository
variables:
  USER_GITLAB: jm.frau
  REPO: ClouditoService
  DOCKER_TLS_CERTDIR: ""
  DEPLOY_TOKEN : "fzEjs_J4C335Nq1eLSBh"
  ANDROID_COMPILE_SDK: "28"
  APP_NAME: "Cloudito"
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  
maven-build:
  image: maven:3-jdk-8
  stage: build-back
  only:
    changes:
      - ClouditoService/**/*
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - recognition
  script: "mvn package $MAVEN_CLI_OPTS -B -f ./ClouditoService/pom.xml -P prod"
  artifacts:
    paths:
      - ClouditoService/Cloudito_geolocation/target/*.jar
      - ClouditoService/Cloudito_recognition/target/*.jar
      - ClouditoService/Cloudito_authentication/target/*.jar


deploy_back:
  image: docker:18-dind
  stage: deploy-back
  only:
    changes:
      - ClouditoService/**/*
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - recognition

  services:
    - name: docker:18-dind
      command: ["--insecure-registry=http://cloudito.gitlab.com:4567"]
  script:
    - docker build -t cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-geolocation:$CI_COMMIT_SHORT_SHA ./ClouditoService/Cloudito_geolocation
    - docker build -t cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-recognition:$CI_COMMIT_SHORT_SHA ./ClouditoService/Cloudito_recognition
    - docker build -t cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-authentication:$CI_COMMIT_SHORT_SHA ./ClouditoService/Cloudito_authentication
    - docker login -u lois.guillet -p $DEPLOY_TOKEN "cloudito.gitlab.com:4567"
    - docker push cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-geolocation:$CI_COMMIT_SHORT_SHA
    - docker push cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-recognition:$CI_COMMIT_SHORT_SHA
    - docker push cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-authentication:$CI_COMMIT_SHORT_SHA
    - docker -H 192.168.1.100:2376 service update --force --image cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-recognition:$CI_COMMIT_SHORT_SHA NewStack_cloudito-recognition
    - docker -H 192.168.1.100:2376 service update --force --image cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-geolocation:$CI_COMMIT_SHORT_SHA NewStack_cloudito-geolocation
    - docker -H 192.168.1.100:2376 service update --force --image cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-authentication:$CI_COMMIT_SHORT_SHA NewStack_cloudito-authentication

# TEST NODEJS

test-node:
  image: node:latest
  stage: deploy-node
  services:
    - name: docker:18-dind
      command: ["--insecure-registry=http://cloudito.gitlab.com:4567"]
  except:
    - geolocation
    - Scope2
    - Scope4
    - recognition
    - Encryption
  script:
    - cd ./ClouditoService/Cloudito_mappingService
    - npm i
    - npm test


deploy-node:
  image: docker:18-dind
  stage: deploy-node
  services:
    - name: docker:18-dind
      command: ["--insecure-registry=http://cloudito.gitlab.com:4567"]
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - recognition
    - Encryption
  before_script:
    - apk --update add nodejs
  script:
    - docker build -t cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-mapping:$CI_COMMIT_SHORT_SHA ./ClouditoService/Cloudito_mappingService
    - docker login -u lois.guillet -p $DEPLOY_TOKEN "cloudito.gitlab.com:4567"
    - docker push cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-mapping:$CI_COMMIT_SHORT_SHA
    - docker -H 192.168.1.100:2376 service update --force --image cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-mapping:$CI_COMMIT_SHORT_SHA NewStack_cloudito-mapping


deploy-daemon:
  image: docker:18-dind
  stage: deploy-daemon
  services:
    - name: docker:18-dind
      command: ["--insecure-registry=http://cloudito.gitlab.com:4567"]
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - Encryption
  script:
    - docker build -t cloudito.gitlab.com:4567/cloudito/cloudito/ClouditoService-mapping:$CI_COMMIT_SHORT_SHA ./cloudito-recognition-daemon
    - docker login -u lois.guillet -p $DEPLOY_TOKEN "cloudito.gitlab.com:4567"
    - docker push cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-recognition-daemon:$CI_COMMIT_SHORT_SHA
    - docker -H 192.168.1.100:2376 service update --force --image cloudito.gitlab.com:4567/cloudito/cloudito/clouditoservice-recognition-daemon:$CI_COMMIT_SHORT_SHA NewStack_cloudito-mapping


######################################################################
# BUILD

.build_template: &android-build
  image: jangrewe/gitlab-ci-android
  stage: android-build
  only:
    changes:
      - cloudito-android/**/*
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - recognition
    - Encryption
  artifacts:
    expire_in: 4 hours
    paths:
      - cloudito-android/app/build/outputs/
  script:
  
  cache:
    key: ${CI_PROJECT_ID}
    paths:
    - .m2/
    - .gradle/

android-build:develop:
  <<: *android-build
  image: jangrewe/gitlab-ci-android
  only:
    changes:
      - cloudito-android/**/*
  except:
    - master
  script:
    - cd cloudito-android/
    - export GRADLE_USER_HOME=$(pwd)/.gradle
    - chmod +x ./gradlew
    - apt-get update -y && apt-get install wget -y
    - ./gradlew assembleDebug

android-build:release:
  <<: *android-build
  image: jangrewe/gitlab-ci-android
  only:
    - master
  script:
    - cd cloudito-android/
    - export GRADLE_USER_HOME=$(pwd)/.gradle
    - chmod +x ./gradlew
    - apt-get update -y && apt-get install wget -y
    - ./gradlew assembleRelease
  artifacts:
    expire_in: 1 month
    paths:
      - cloudito-android/app/build/outputs/


########################################################################
# TESTS

.test_template: &android-test
  image: jangrewe/gitlab-ci-android
  stage: android-test
  only:
    changes:
      - cloudito-android/**/*
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - recognition
    - Encryption

android-test:unit:
  <<: *android-test
  script:
    - cd cloudito-android/
    - ./gradlew test

android-test:functional:
  <<: *android-test
  script:
    - echo "functional test"
#    - wget --quiet --output-document=android-wait-for-emulator https://raw.githubusercontent.com/travis-ci/travis-cookbooks/0f497eb71291b52a703143c5cd63a217c8766dc9/community-cookbooks/android-sdk/files/default/android-wait-for-emulator
#    - chmod +x android-wait-for-emulator
#    - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager "system-images;android-${ANDROID_COMPILE_SDK};google_apis_playstore;x86" >> logfile_android
#    - echo y | ${ANDROID_HOME}/tools/bin/sdkmanager --update >> logfile_android2
#    - echo no | ${ANDROID_HOME}/tools/bin/avdmanager create avd -k "system-images;android-${ANDROID_COMPILE_SDK};google_apis_playstore;x86" -n test
#    - ${ANDROID_HOME}/tools/emulator -avd test -no-window -no-audio
#    - ./android-wait-for-emulator
#    - adb shell input keyevent 82
#    - ./gradlew cAT


########################################################################
# PACKAGE

.package_template: &android-package
  image: jangrewe/gitlab-ci-android
  only:
    changes:
      - cloudito-android/**/*
  except:
    - Scope3
    - geolocation
    - Scope2
    - Scope4
    - recognition
    - Encryption
  before_script:
    - cd cloudito-android/
    - export VERSION_NAME=`egrep '^[[:blank:]]+versionName[[:blank:]]'  app/build.gradle | awk '{print $2}' | sed s/\"//g`
    - mkdir -p exported

android-package:develop:
  <<: *android-package
  stage: android-package
  environment: Development
  only:
    changes:
      - cloudito-android/**/*
  except:
    - master
  script:
    - mv app/build/outputs/apk/debug/app-debug.apk ./exported/${APP_NAME}-v$VERSION_NAME-debug.apk
  dependencies:
    - android-build:develop
  artifacts:
    expire_in: 7 days
    paths:
      - exported

android-package:release:unsigned:
  <<: *android-package
  stage: android-package
  environment: Release
  only:
    changes:
      - cloudito-android/**/*
  script:
    - mv app/build/outputs/apk/release/app-release.apk ./exported/${APP_NAME}-v$VERSION_NAME-release.apk
  dependencies:
    - android-build:release
  artifacts:
    expire_in: 1 month
    paths:
      - exported
